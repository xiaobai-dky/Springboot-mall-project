<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--namespace：用于指定当前的映射文件和哪个接口进行映射，需要标注包的完整路径-->
<mapper namespace="com.xiaobai.store.mapper.UserMapper">
    <!--
        自定义映射规则：resultMap标签
        id:给这个标签分配一个唯一的id值，对应的就是resultMap = "id"
        type:对查询的结果与java中的哪个实体类进行映射(把类的属性和表的字段不一致的部分匹配指定，一致的可以不写)
    -->
    <resultMap id="UserEntityMap" type="com.xiaobai.store.entity.User">
        <!--
            其中主键不管是否一致均不可省略
            column:表中字段的名称
            property：实体类中属性的名称
        -->
        <id column="uid" property="uid"/>
        <result column="is_delete" property="isDelete"/>
        <result column="created_user" property="createdUser"/>
        <result column="created_time" property="createdTime"/>
        <result column="modified_user" property="modifiedUser"/>
        <result column="modified_time" property="modifiedTime"/>
    </resultMap>
    <!--id：表示映射中接口的方法名称，直接在标签内部编写SQL语句
    useGeneratedKeys="true"开启某个字段的值自增功能(一般是主键自增)
    keyProperty="uid" 这里的key是实体类的属性名 -->
    <insert id="insert" useGeneratedKeys="true" keyProperty="uid">
        INSERT INTO t_user(
            username,password,salt,phone,email,gender,avatar,is_delete,
            created_user,created_time,modified_user,modified_time
        )VALUES (
            #{username},#{password},#{salt},#{phone},#{email},#{gender},#{avatar},#{isDelete},
            #{createdUser},#{createdTime},#{modifiedUser},#{modifiedTime}
        )
    </insert>

    <!--
        查询结果是一个对象: 使用resultType 查询的结果集类型，需要指定映射类的类型（要求表的字段和类的字段一模一样）
                          使用resultMap 表示表的字段和类的属性不一样时候
        查询结果是多个对象：
    -->
    <select id="findByUsername" resultMap="UserEntityMap">
        SELECT * FROM t_user WHERE username=#{username}
    </select>

    <select id="findByUid" resultMap="UserEntityMap">
        SELECT * FROM t_user WHERE uid=#{uid}
    </select>
    
    <update id="updatePasswordByUid">
        UPDATE t_user SET
            password=#{password},
            modified_user=#{modifiedUser},
            modified_time=#{modifiedTime}
        WHERE uid=#{uid}
    </update>

    <update id="updateInfoByUid">
        UPDATE t_user SET
            <if test="phone!=null">phone=#{phone},</if>
            <if test="email!=null">email=#{email},</if>
            <if test="gender!=null">gender=#{gender},</if>
            modified_user=#{modifiedUser},
            modified_time=#{modifiedTime}
        WHERE uid=#{uid}
    </update>
    
    <update id="updateAvatarByUid">
        UPDATE t_user SET avatar=#{avatar},modified_user=#{modifiedUser},modified_time=#{modifiedTime} WHERE uid=#{uid}
    </update>

</mapper>
